#pragma once
#include "handle.hh"
#include "object.hh"
#include "runtimestorage.hh"

#include <glog/logging.h>

class Runner
{
public:
  virtual void init() {};
  virtual Handle<Object> apply( Handle<ObjectTree> handle, TreeData combination ) = 0;
  virtual ~Runner() {}
};

/**
 * The standard Fixpoint Runner, which links and loads ELF files generated by wasm2c.
 */
class WasmRunner : public Runner
{
public:
  virtual void init() override {}
  virtual ~WasmRunner() {}
  virtual Handle<Object> apply( Handle<ObjectTree>, TreeData ) override
  {
    throw std::runtime_error( "not implemented" );
  }
};

/**
 * For testing and development purposes: a Runner which interprets the first element of a combination as a function
 * pointer and directly jumps to it.
 */
class PointerRunner : public Runner
{

public:
  virtual void init() override {}
  virtual ~PointerRunner() {}

  virtual Handle<Object> apply( Handle<ObjectTree> handle, TreeData combination ) override
  {
    auto procedure = combination->at( 0 )
                       .try_into<Expression>()
                       .and_then( &Handle<Expression>::try_into<Object> )
                       .and_then( &Handle<Object>::try_into<Value> )
                       .and_then( &Handle<Value>::try_into<Blob> )
                       .and_then( &Handle<Blob>::try_into<Literal> )
                       .value();
    uint64_t addr( procedure );
    auto x = reinterpret_cast<Handle<Object> ( * )( Handle<ObjectTree> )>( addr );
    return x( handle );
  }
};
