#!/usr/bin/perl -w

use strict;

if ((scalar @ARGV) != 3) {
  print STDERR @ARGV;
  die qq{Usage: $0 stateless-tester home-tree.txt open.wasm};
}

my ($executable, $hometreefile, $wasm) = @ARGV;

sub check_return($) {
  my ($expected_retval) = @_;

  my $hometree = `cat $hometreefile`;
  my $result = `$executable tree:4 string:\"0\" thunk: tree:3 string:unused ref:compile-encode file:$wasm tree:0 name:$hometree 2>&1`;

  if ($?) {
    die qq{Failure in running return-test: $result};
  }

  my (undef, $substring) = split( 'Result:\n', $result );
  ($_, my $retval) = $substring =~ m{0\. Blob \(4 bytes\): (.*) \(uint32:(\d*)\)};

  if ( !( $retval eq $expected_retval ) ) {
    print STDERR qq{Got result:\n$result\n};
    die qq{Wrong return value ($retval, was expecting $expected_retval)};
  }
}

check_return(0);
