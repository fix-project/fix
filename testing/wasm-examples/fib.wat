(module
 (import "fixpoint" "attach_tree_ro_table_0" (func $attach_tree_ro_table_0 (param externref)))
 (import "fixpoint" "attach_blob_ro_mem_0"   (func $attach_blob_ro_mem_0 (param externref)))
 (import "fixpoint" "create_blob_rw_mem_0"    (func $create_blob_rw_mem_0 (param i32)(result externref)))
 (import "fixpoint" "create_blob_rw_mem_1"    (func $create_blob_rw_mem_1 (param i32)(result externref)))
 (import "fixpoint" "create_tree_rw_table_0"  (func $create_tree_rw_table_0 (param i32)(result externref)))
 (import "fixpoint" "create_tree_rw_table_1"  (func $create_tree_rw_table_1 (param i32)(result externref)))
 (import "fixpoint" "create_tree_rw_table_2"  (func $create_tree_rw_table_2 (param i32)(result externref)))
 (import "fixpoint" "create_application_thunk" (func $create_application_thunk (param externref)(result externref)))
 (import "fixpoint" "create_strict_encode" (func $create_strict_encode (param externref)(result externref)))
 (table $ro_table_0 (export "ro_table_0") 0 externref)
 (memory $ro_mem_0  (export "ro_mem_0")   0)
 (memory $rw_mem_0  (export "rw_mem_0")   1)
 (memory $rw_mem_1  (export "rw_mem_1")   1)
 (table $rw_table_0 (export "rw_table_0") 4 externref)
 (table $rw_table_1 (export "rw_table_1") 4 externref)
 (table $rw_table_2 (export "rw_table_2") 4 externref)
 (func (export "_fixpoint_apply") (param $encode externref) (result externref) (local $val i32)
       (call $attach_tree_ro_table_0 (local.get $encode))                 ;; attach the ENCODE to $ro_table_0
       (call $attach_blob_ro_mem_0 (table.get $ro_table_0 (i32.const 2))) ;; attach 1st addend to $ro_mem_0
       (local.set $val (i32.load $ro_mem_0 (i32.const 0)))
       (if (result externref)
         (i32.eqz (local.get $val)) 
         (then (i32.store $rw_mem_0 (i32.const 0) (i32.const 1))
               (call $create_blob_rw_mem_0 (i32.const 4)))
       (else (if (result externref)
         (i32.eq (local.get $val) (i32.const 1))
         (then (i32.store $rw_mem_0 (i32.const 0) (i32.const 1))
               (call $create_blob_rw_mem_0 (i32.const 4)))
       (else
         (i32.store $rw_mem_0 (i32.const 0) (i32.add (local.get $val) (i32.const -1)))
         (i32.store $rw_mem_1 (i32.const 0) (i32.add (local.get $val) (i32.const -2)))
         
         (table.set $rw_table_0 (i32.const 2) (call $create_blob_rw_mem_0 (i32.const 4)))
         (table.set $rw_table_0 (i32.const 0) (table.get $ro_table_0 (i32.const 0)))
         (table.set $rw_table_0 (i32.const 1) (table.get $ro_table_0 (i32.const 1)))
         (table.set $rw_table_0 (i32.const 3) (table.get $ro_table_0 (i32.const 3)))
         (table.set $rw_table_1 (i32.const 2) (call $create_blob_rw_mem_1 (i32.const 4)))
         (table.set $rw_table_1 (i32.const 0) (table.get $ro_table_0 (i32.const 0)))
         (table.set $rw_table_1 (i32.const 1) (table.get $ro_table_0 (i32.const 1)))
         (table.set $rw_table_1 (i32.const 3) (table.get $ro_table_0 (i32.const 3)))
         
         (table.set $rw_table_2 (i32.const 0) (table.get $ro_table_0 (i32.const 0)))
         (table.set $rw_table_2 (i32.const 1) (table.get $ro_table_0 (i32.const 3)))
         (table.set $rw_table_2 (i32.const 2) (call $create_strict_encode (call $create_application_thunk (call $create_tree_rw_table_0 (i32.const 4)))))
         (table.set $rw_table_2 (i32.const 3) (call $create_strict_encode (call $create_application_thunk (call $create_tree_rw_table_1 (i32.const 4)))))
         (call $create_application_thunk (call $create_tree_rw_table_2 (i32.const 4))))
       )))
 )
)
