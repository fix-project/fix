#!/usr/bin/perl -w

use strict;

if ((scalar @ARGV) != 2) {
  die qq{Usage: $0 stateless-tester addblob.wasm};
}

my ($executable, $wasm) = @ARGV;

sub check_add($$) {
  my ($x, $y) = @_;
  my $expected_answer = ($x + $y) % 2**32;

  my $result = `$executable tree:4 string:\"0\" thunk: tree:3 string:\"0\" ref:compile-encode file:$wasm uint32:$x uint32:$y`;
  print "$result";

  if ($?) {
    print STDERR qq{Got result:\n$result\n};
    die qq{Failure in running $x + $y};
  }

  my (undef, $substring) = split( 'Result:\n', $result );
  my ($blob) = $substring =~ m{^Blob \(4 bytes\): (.*)$};
  my ($answer) = $blob =~ m{uint32:(\d*)\)$};

  if ( ! ( $answer eq $expected_answer ) ) {
    print STDERR qq{Got result:\n$result\n};
    die qq{Wrong answer to $x + $y ($answer)};
  }
}

for ( 1 .. 32 ) {
  my $x = int rand(2**31);
  my $y = int rand(2**31);
  check_add($x, $y);
}

check_add(0, 0);
check_add(2**32 - 5, 2**31 + 12);
