#!/usr/bin/perl -w

use strict;

if ((scalar @ARGV) != 3) {
  die qq{Usage: $0 stateless-tester trap.wasm expected_trap_name};
}

my ($executable, $trap_wasm, $expected_trap_name) = @ARGV;

open (my $command, '-|', qq{$executable tree:2 string:unused thunk: tree:3 string:unused ref:compile-encode file:${trap_wasm} 2>&1}) or die qq{$!};

my $found_trap = 0;
my @output;
while (<$command>) {
  chomp;
  push @output, $_;
  if (m{Execution trapped: ${expected_trap_name}$}) {
    $found_trap = 1;
  }
}

close($command) and die qq{Execution did not trap as expected: $!};

if ($found_trap) {
  print STDERR qq{Execution trapped as expected.\n};
  exit 0;
}

print STDERR "Execution trapped, but not as expected. Output was:\n";
for (@output) {
  print qq{   $_\n};
}

die qq{Execution did not trap as expected};
